name: Dynamic Environment Deployment

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'  # Matches any branch starting with feature/

jobs:
  check_status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Check for successful status checks
        run: |
          # Get commit status for the pushed commit
          COMMIT_STATUS=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status)

          # Extract the status state from the response
          STATE=$(echo $COMMIT_STATUS | jq -r '.state')
          
          if [[ "$STATE" != "success" ]]; then
            echo "Status checks failed, aborting deployment."
            exit 1
          fi

  deploy_production:
    runs-on: ubuntu-latest
    needs: check_status
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production
        run: ./deploy-prod.sh  # Replace with your production deployment script

  deploy_staging:
    runs-on: ubuntu-latest
    needs: check_status
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging
        run: ./deploy-staging.sh  # Replace with your staging deployment script

  deploy_feature:
    runs-on: ubuntu-latest
    needs: check_status
    if: startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Feature Environment
        run: ./deploy-feature.sh  # Replace with your feature branch deployment script

